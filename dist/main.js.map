{"mappings":"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","sources":["src/index.ts","src/cache.ts"],"sourcesContent":["export { default as Cache } from './cache';\n","import { cacheEntry, cacheEntryKey } from './types';\n\nexport default class Cache<T> {\n  private cache: Record<string, cacheEntry<T>>;\n  private newestEntry: cacheEntryKey;\n  private oldestEntry: cacheEntryKey;\n  public maxSize: number;\n\n  constructor(maxSize = 10) {\n    if (maxSize < 1) {\n      throw new Error('Invalid cache size');\n    }\n    this.cache = {};\n    this.newestEntry = null;\n    this.oldestEntry = null;\n    this.maxSize = maxSize;\n  }\n\n  getSize() {\n    return Object.keys(this.cache).length;\n  }\n\n  get(key: string): T | undefined {\n    const value = this.cache[key];\n    if (!value || this.getSize() === 1 || this.newestEntry === key) {\n      return value?.value;\n    }\n    const tPrev = value?.previousEntry;\n    const tNext = value?.nextEntry;\n    if (this.oldestEntry === key) {\n      this.oldestEntry = tNext;\n    }\n    if (tPrev) {\n      this.cache[tPrev].nextEntry = tNext;\n    }\n    if (tNext) {\n      this.cache[tNext].previousEntry = tPrev;\n    }\n    value.previousEntry = this.newestEntry;\n    if (this.newestEntry) {\n      this.cache[this.newestEntry].nextEntry = key;\n    }\n    value.nextEntry = null;\n    this.newestEntry = key;\n    return value?.value;\n  }\n\n  set(key: string, value: T) {\n    if (this.getSize() === this.maxSize && !this.cache[key]) {\n      this.evict();\n    }\n    this.cache[key] = {\n      value,\n      previousEntry: this.newestEntry,\n      nextEntry: null,\n    };\n    if (this.newestEntry) {\n      this.cache[this.newestEntry].nextEntry = key;\n    }\n    this.newestEntry = key;\n    if (this.getSize() === 1) {\n      // If this is the first K-V pair being added.\n      this.oldestEntry = key;\n    }\n  }\n\n  invalidateKey(key: string) {\n    const value = this.cache[key];\n    if (this.isEmpty() || !value) {\n      return;\n    } else if (this.getSize() === 1 && value) {\n      // It's the only entry\n      this.invalidateCache();\n      return;\n    }\n    if (key === this.oldestEntry) {\n      this.oldestEntry = value.nextEntry;\n    }\n    if (key === this.newestEntry) {\n      this.newestEntry = value.previousEntry;\n    }\n    // Somewhere in the middle\n    const tPrev = value.previousEntry;\n    const tNext = value.nextEntry;\n    if (tPrev) {\n      this.cache[tPrev].nextEntry = value.nextEntry;\n    }\n    if (tNext) {\n      this.cache[tNext].previousEntry = value.previousEntry;\n    }\n    delete this.cache[key];\n  }\n\n  isEmpty() {\n    return !this.getSize();\n  }\n\n  private evict() {\n    if (this.getSize() && this.oldestEntry) {\n      const tNext = this.cache[this.oldestEntry]?.nextEntry;\n      if (tNext) {\n        this.cache[tNext].previousEntry = null;\n      }\n      delete this.cache[this.oldestEntry];\n      this.oldestEntry = tNext;\n    }\n  }\n\n  invalidateCache() {\n    this.cache = {};\n    this.oldestEntry = null;\n    this.newestEntry = null;\n  }\n\n  getAll() {\n    return this.cache;\n  }\n}\n"],"names":[],"version":3,"file":"main.js.map"}